definitions:
  models.ChangePassword:
    properties:
      mail:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.ChangeStatus:
    properties:
      active:
        type: boolean
      id:
        type: string
    type: object
  models.CreateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      mail:
        type: string
      password:
        type: string
      phone:
        type: string
      sex:
        type: string
    type: object
  models.ForgetPassword:
    properties:
      mail:
        type: string
      new_password:
        type: string
      otp:
        type: string
    type: object
  models.GetAllUsersResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.UpdateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      mail:
        type: string
      phone:
        type: string
    type: object
  models.User:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      password:
        type: string
      phone:
        type: string
      sex:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /user:
    get:
      consumes:
      - application/json
      description: Retrieves information about all users.
      parameters:
      - description: users
        in: query
        name: search
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: This api creates a new user.
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create a user
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: This api deletes a user by its id and returns success message.
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: delete a user by its id
      tags:
      - user
    get:
      consumes:
      - application/json
      description: This api gets a user by its id and returns its information.
      parameters:
      - description: user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: get a user by its id
      tags:
      - user
    put:
      consumes:
      - application/json
      description: This api updates a user by its id and returns id.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: update a user
      tags:
      - user
  /user/password:
    patch:
      consumes:
      - application/json
      description: Updates a user password with the provided old and new passwords.
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Change user password
      tags:
      - user
  /user/password/reset:
    post:
      consumes:
      - application/json
      description: Resets a user password using a one-time password for verification.
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.ForgetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Reset forgotten password
      tags:
      - user
  /user/status:
    patch:
      consumes:
      - application/json
      description: Updates the active status (enabled/disabled) of a user.
      parameters:
      - description: user
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/models.ChangeStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Change user status
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
